plugins {
    id 'java-library'
}

repositories {
    mavenCentral()
}

dependencies {
    compileOnly 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.3.0'

    // https://mvnrepository.com/artifact/org.mybatis/mybatis
    // mybatis 内部提供了 javassist 库
    compileOnly 'org.mybatis:mybatis:3.5.16'
    // https://mvnrepository.com/artifact/org.jetbrains/annotations
    compileOnly 'org.jetbrains:annotations:24.1.0'

    testImplementation('org.mybatis.spring.boot:mybatis-spring-boot-starter:2.3.0')

    // https://mvnrepository.com/artifact/org.javassist/javassist
    implementation(project(":agent-api"))
}

// 设置兼容性版本
sourceCompatibility = '1.8'
targetCompatibility = '1.8'

jar {
    // 依赖 agent-api 模块
    dependsOn(":agent-api:jar")

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    // 打包的jar包名称
    archiveFileName = 'mybatisx-agent.jar'
    manifest {
        attributes 'Agent-Class': "org.mybatisx.extension.agent.Agent"
        attributes 'Can-Redefine-Classes': true
        attributes 'Can-Retransform-Classes': true
        attributes 'Manifest-Version': 1.0
    }

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }

    doLast {
        copy {
            def targetFile = file("${rootDir}/mybatisx-plugin/src/main/resources/${outputs.files[0].name}")
            if (targetFile.exists())
                delete targetFile

            from outputs.files[0].getAbsolutePath()
            into "${rootDir}/mybatisx-plugin/src/main/resources"
        }
    }
}

test {
    useJUnitPlatform()
}